<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"    
	xmlns:c="http://www.springframework.org/schema/c"    
	xmlns:context="http://www.springframework.org/schema/context"    
	xmlns:aop="http://www.springframework.org/schema/aop"    
	xmlns:tx="http://www.springframework.org/schema/tx"    
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:component-scan base-package="com.example.biz.board, com.example.biz.user" />
	
	<aop:aspectj-autoproxy />
	
	<context:property-placeholder location="/WEB-INF/config/database.properties"/>
	
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
<!-- 	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="txPointcut" 
			expression="execution(* com.example.boardapp..*Impl.*(..))" />
		<aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice" />
	</aop:config>
 -->
 
 	<tx:annotation-driven transaction-manager="txManager" />
 		
<!-- 	
	<bean id="consoleLogAdvice" class="com.example.boardapp.aop.ConsoleLogAdvice" />
 -->
<!-- 
	<aop:config>
		<aop:pointcut expression="execution(* com.example.boardapp..*Impl.*(..))" id="allPointcut"/>
		<aop:pointcut expression="execution(* com.example.boardapp..*Impl.get*(..))" id="getPointcut"/>
		
		<aop:aspect ref="consoleLogAdvice">
			<aop:before pointcut-ref="allPointcut" method="printBeforeLog" />
			<aop:around pointcut-ref="getPointcut" method="printAroundLog"/>			
		</aop:aspect>
	</aop:config>
 --> 	
	
<!-- 	<bean id="logAroundAdvice" class="com.example.boardapp.aop.LogAroundAdvice" />
	<bean id="logBeforeAdvice" class="com.example.boardapp.aop.LogBeforeAdvice" />
	<bean id="logAfterReturningAdvice" class="com.example.boardapp.aop.LogAfterReturningAdvice" />
	<bean id="logAfterThrowingAdvice" class="com.example.boardapp.aop.LogAfterThrowingAdvice" />
	
	<bean id="classicPointcut" class="org.springframework.aop.support.NameMatchMethodPointcut">
		<property name="mappedName" value="deleteBoard" />
	</bean>
	
	<bean id="classicBeforeAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="advice" ref="logBeforeAdvice" />
		<property name="pointcut" ref="classicPointcut" />
	</bean>	
	
	<bean id="classicAfterAdvisor" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
		<property name="advice" ref="logAfterReturningAdvice" />
		<property name="mappedNames">
			<list>
				<value>insertBoard</value>
				<value>listBoard</value>
			</list>
		</property>
	</bean>	
	
	<bean id="boardServiceProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
    	<property name="target" ref="boardService" />
    	<property name="interceptorNames">
    		<list>
    			<value>logAroundAdvice</value>
     			<value>classicBeforeAdvisor</value>
     			<value>classicAfterAdvisor</value>
     			<value>logAfterThrowingAdvice</value>
    		</list>
    	</property>
    </bean>
 -->
</beans>